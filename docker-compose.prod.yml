version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: bash -c "gunicorn backend.asgi:application --bind 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker" 
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
  db:
    image: postgres:12
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db

  redis:
    image: redis:6
    container_name: local_redis
    ports:
      - "6379:6379"
  frontend:
    build: 
      dockerfile: Dockerfile
      context: frontend
    command: serve -s build
    expose:
      - 3000
    env_file:
      - .env
  nginx:
    image: nginx
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "8000:8000"
      - "3000:3000"
      - "443:443"
    depends_on:
      web:
        condition: service_started
      frontend:
        condition: service_started
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

volumes:
  postgres_data: